# 1 "./hpribin4bit.va"











# 1 "disciplines.vams"






nature Current
 access=I;
 units="A";
 abstol=1e-12;
endnature

nature Voltage
 access=V;
 units="V";
 abstol=1e-6;
endnature

discipline electrical
 potential Voltage;
 flow      Current;
enddiscipline

nature Temperature
 access=Temp;
 units="C";
 abstol=1e-4;
endnature

nature Power
 access=Pwr;
 units="W";
 abstol=1e-9;
endnature

discipline thermal
 potential Temperature;
 flow      Power;
enddiscipline
# 13 "./hpribin4bit.va"
# 1 "constants.vams"







# 10 "constants.vams"

































# 14 "./hpribin4bit.va"
module hpribin4bit (A, B, C, D, V, Y, X);
 inout  A, B, C, D, V, Y, X;
 electrical  A, B, C, D, V, Y, X;
 electrical Xn1, Xn2, Yn1, Yn2, Vn1, Vn2;


 parameter real TR=6 from [1.0:20.0]  (*info="transfer function scaling factor"*);
 parameter real Delay = 1e-9 from [0: inf]  (*info="output delay" unit="s"*);

 real Rd, Cd;
 real mX, mY, mV;

analog begin
@(initial_model)
  begin
    Rd = 1e3;
    Cd= Delay*1.43/Rd;
  end

mX = V(D)+V(C);
mY = V(D)+(1-V(C))*V(B);
mV = V(D)+V(C)+V(B)+V(A);
I(Xn1) <+ -0.5*(1+tanh(TR*(mX-0.5)));
I(Xn1) <+ V(Xn1);
I(Xn1, Xn2) <+ V(Xn1,Xn2)/Rd;
I(Xn2) <+ ddt(Cd*V(Xn2));
I(X)  <+ -V(Xn2);
I(X) <+ V(X);

I(Yn1) <+ -0.5*(1+tanh(TR*(mY-0.5)));
I(Yn1) <+ V(Yn1);
I(Yn1, Yn2) <+ V(Yn1,Yn2)/Rd;
I(Yn2) <+ ddt(Cd*V(Yn2));
I(Y)  <+ -V(Yn2);
I(Y) <+ V(Y);

I(Vn1) <+ -0.5*(1+tanh(TR*(mV-0.5)));
I(Vn1) <+ V(Vn1);
I(Vn1, Vn2) <+ V(Vn1,Vn2)/Rd;
I(Vn2) <+ ddt(Cd*V(Vn2));
I(V)  <+ -V(Vn2);
I(V) <+ V(V);

end
endmodule
